using Robust.Client.UserInterface;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Content.Shared._Corvax.Silicons.Borgs.Components;

namespace Content.Client._Corvax.Silicons.Laws.Ui;

[GenerateTypedNameReferences]
public sealed partial class RemoteDeviceDisplay : Control
{
    public event Action<RemoteDeviceActionEvent>? OnRemoteDeviceAction;

    public RemoteDeviceDisplay(NetEntity netEntityUid, string displayName, float devicePosX, float devicePosY)
    {
        RobustXamlLoader.Load(this);

        DeviceName.SetMessage(displayName);

        DevicePos.SetMessage("(" + Math.Round(devicePosX) + ", " + Math.Round(devicePosY) + ")");

        MoveButton.OnPressed += _ =>
        {
            OnRemoteDeviceAction?.Invoke(new RemoteDeviceActionEvent(
                RemoteDeviceActionEvent.RemoteDeviceActionType.MoveToDevice,
                netEntityUid));
        };

        TakeControlButton.OnPressed += _ =>
        {
            OnRemoteDeviceAction?.Invoke(new RemoteDeviceActionEvent(
                RemoteDeviceActionEvent.RemoteDeviceActionType.TakeControl,
                netEntityUid));
        };
    }
}